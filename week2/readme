Task_0
Пользователь вводит с консоли произвольный текст, мы должны этот текст записать в файл и потом прочитать из файла. Использовать буферизацию.
Создать класс “машина” с примитивными и ссылочными полями. Сериализовать и десериализовать этот объект.

Task_1
Нужно сохранить имена и фамилии всех своих сотрудников в ArrayList. Каждый месяц, работник будет выбран случайным образом из этих записей, чтобы получить премию.

Task_2
Напишите класс Student, предоставляющий информацию об имени студента методом getName() и о его курсе методом getCourse().
Напишите метод printStudents(List students, int course), который получает список студентов и номер курса и печатает в консоль имена тех студентов из списка, которые обучаются на данном курсе. Для обхода списка в этом методе используйте итератор.
Протестируйте ваш метод (для этого предварительно придется создать десяток объектов класса Student и поместить их в список).

Task_3
Есть список сотрудников, которые есть имя фамилия и уникальный номер сотрудника. 
Получить сотрудника по уникальному ключу. 

Task_4
Есть текстовый файл в котором хранятся перевод слов для словаря.
Содержимое файла:
white белый
black черный
red красный
…

Реализовать метод который будет принимать на вход слово на английском а возвращать результат перевода на русском.

Task_5
В текстовом файле хранятся названия песен, каждая песня с новой строки. Нужно вывести в консоль отсортированные по алфавиту все песни из файла.

Task_6
В текстовом файле хранятся список песен, каждая песня из новой строки, данные о песне разделены слешем:
Название песни/исполнитель/рейтинг песни
Название песни/исполнитель/рейтинг песни
…

Создайте класс Song с требуемыми полями. Отсортируйте и выведите в консоль песни из файла по названию и по исполнителю.

Task_7
Есть класс Node(элемент односвязного списка) в котором есть поле next типа Node(ссылка на следующий элемент) и int поле elem.

Реализовать метод который будет принимать Node node (ссылка на первый элемент списка) и возвращать список в обратном порядке.
